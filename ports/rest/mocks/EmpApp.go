// Code generated by mockery v2.10.6. DO NOT EDIT.

package mocks

import (
	model "github.com/morlfm/rest-api/application/model"
	mock "github.com/stretchr/testify/mock"
)

// EmpApp is an autogenerated mock type for the EmpApp type
type EmpApp struct {
	mock.Mock
}

// CreatingEmployeeDb provides a mock function with given fields: emp
func (_m *EmpApp) CreatingEmployeeDb(emp model.Employee) (string, error) {
	ret := _m.Called(emp)

	var r0 string
	if rf, ok := ret.Get(0).(func(model.Employee) string); ok {
		r0 = rf(emp)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Employee) error); ok {
		r1 = rf(emp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteEmployee provides a mock function with given fields: emp
func (_m *EmpApp) DeleteEmployee(emp model.Employee) (model.Employee, error) {
	ret := _m.Called(emp)

	var r0 model.Employee
	if rf, ok := ret.Get(0).(func(model.Employee) model.Employee); ok {
		r0 = rf(emp)
	} else {
		r0 = ret.Get(0).(model.Employee)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Employee) error); ok {
		r1 = rf(emp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEmployee provides a mock function with given fields: emp
func (_m *EmpApp) GetEmployee(emp model.Employee) (model.Employee, error) {
	ret := _m.Called(emp)

	var r0 model.Employee
	if rf, ok := ret.Get(0).(func(model.Employee) model.Employee); ok {
		r0 = rf(emp)
	} else {
		r0 = ret.Get(0).(model.Employee)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Employee) error); ok {
		r1 = rf(emp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEmployees provides a mock function with given fields: emp
func (_m *EmpApp) GetEmployees(emp model.Employee) ([]model.Employee, error) {
	ret := _m.Called(emp)

	var r0 []model.Employee
	if rf, ok := ret.Get(0).(func(model.Employee) []model.Employee); ok {
		r0 = rf(emp)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Employee)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Employee) error); ok {
		r1 = rf(emp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateEmployee provides a mock function with given fields: emp
func (_m *EmpApp) UpdateEmployee(emp model.Employee) (model.Employee, error) {
	ret := _m.Called(emp)

	var r0 model.Employee
	if rf, ok := ret.Get(0).(func(model.Employee) model.Employee); ok {
		r0 = rf(emp)
	} else {
		r0 = ret.Get(0).(model.Employee)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Employee) error); ok {
		r1 = rf(emp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
